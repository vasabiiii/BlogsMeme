// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const WORDS_PER_MINUTE = 200;

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const newsContainer = document.getElementById('newsContainer');
const mostPopularContainer = document.getElementById('mostPopular');
const sortSelect = document.getElementById('sortSelect');
const themeToggle = document.getElementById('themeToggle');
const categoryFilters = document.getElementById('categoryFilters');
const navbarBrand = document.querySelector('.site-title');

// –ü–æ—Ä–æ—Å—è—á–∏–π —Ä–µ–∂–∏–º
const pigModeToggle = document.getElementById('pigModeToggle');
const pigSound = new Audio('pub/drujelyubnoe-hryukane-molodoy-svinki.mp3');

// –†–µ–∂–∏–º –¥–µ–º–æ–∫—Ä–∞—Ç–∏–∏
const democracyModeToggle = document.getElementById('democracyModeToggle');
const democracyVolumeControl = document.querySelector('.democracy-volume-control');
const democracyVolumeBtn = document.getElementById('democracyVolumeBtn');
const democracyVolume = document.getElementById('democracyVolume');
const eagleSound = new Audio('pub/eagle-281163.mp3');
const anthemSound = new Audio('pub/the_star-spangled_banner_-_u_s.mp3');
const gunSound = new Audio('pub/avtomatnyie-pulemetnyie-ocheredi-27911.mp3');

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let articles = [];
let currentTheme = localStorage.getItem('theme') || 'light';
let selectedCategory = 'all';
let isPigMode = false;
let isDemocracyMode = false;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', async () => {
    await loadArticles();
    applyTheme();
    renderCategoryFilters();
    renderArticles();
    updateMostPopular();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞
    navbarBrand.addEventListener('click', function(e) {
        e.preventDefault();
        selectedCategory = 'all';
        sortSelect.value = 'date';
        document.querySelectorAll('.category-filter').forEach(f => f.classList.remove('active'));
        document.querySelector('.category-filter[data-category="all"]').classList.add('active');
        renderArticles();
    });
});

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–µ–π
async function loadArticles() {
    try {
        const response = await fetch('Articles.json');
        const data = await response.json();
        articles = data.articles;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–µ–π:', error);
        newsContainer.innerHTML = '<div class="col-12"><div class="alert alert-danger">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–µ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</div></div>';
    }
}

// –†–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è
function calculateReadingTime(wordCount) {
    const minutes = Math.ceil(wordCount / WORDS_PER_MINUTE);
    return `${minutes} –º–∏–Ω`;
}

// –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function renderCategoryFilters() {
    const categories = [...new Set(articles.map(article => article.category))];
    const categoryCounts = categories.reduce((acc, category) => {
        acc[category] = articles.filter(article => article.category === category).length;
        return acc;
    }, {});

    categoryFilters.innerHTML = `
        <div class="category-filter ${selectedCategory === 'all' ? 'active' : ''}" data-category="all">
            –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            <span class="badge">${articles.length}</span>
        </div>
        ${categories.map(category => `
            <div class="category-filter ${selectedCategory === category ? 'active' : ''}" data-category="${category}">
                ${category}
                <span class="badge">${categoryCounts[category]}</span>
            </div>
        `).join('')}
    `;

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    document.querySelectorAll('.category-filter').forEach(filter => {
        filter.addEventListener('click', () => {
            if (isPigMode) {
                pigSound.currentTime = 0;
                pigSound.play();
            } else if (isDemocracyMode) {
                eagleSound.currentTime = 0;
                gunSound.currentTime = 0;
                eagleSound.play();
                gunSound.play();
            }
            selectedCategory = filter.dataset.category;
            document.querySelectorAll('.category-filter').forEach(f => f.classList.remove('active'));
            filter.classList.add('active');
            renderArticles();
        });
    });
}

// –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç–µ–π
function renderArticles() {
    let filteredArticles = articles;
    
    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if (selectedCategory !== 'all') {
        filteredArticles = articles.filter(article => article.category === selectedCategory);
    }

    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
    const sortedArticles = [...filteredArticles].sort((a, b) => {
        if (sortSelect.value === 'date') {
            return new Date(b.date) - new Date(a.date);
        }
        return b.views - a.views;
    });

    if (sortedArticles.length === 0) {
        newsContainer.innerHTML = '<div class="col-12"><div class="alert alert-info">–ù–µ—Ç —Å—Ç–∞—Ç–µ–π –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.</div></div>';
        return;
    }

    newsContainer.innerHTML = sortedArticles.map(article => `
        <div class="col-md-6 col-lg-4 mb-4">
            <div class="card news-card h-100">
                <div class="card-body">
                    <span class="badge bg-primary category-badge">${article.category}</span>
                    <h5 class="card-title mt-2">${article.title}</h5>
                    <p class="card-text">${article.content.substring(0, 150)}...</p>
                    <div class="d-flex justify-content-between align-items-center mt-3">
                        <div>
                            <span class="reading-time">‚è±Ô∏è ${calculateReadingTime(article.wordCount)}</span>
                            <span class="views-count ms-3">üëÅÔ∏è ${article.views}</span>
                        </div>
                        <small class="text-muted">${formatDate(article.date)}</small>
                    </div>
                </div>
            </div>
        </div>
    `).join('');
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
function formatDate(dateString) {
    const options = { year: 'numeric', month: 'long', day: 'numeric' };
    return new Date(dateString).toLocaleDateString('ru-RU', options);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∞–º–æ–≥–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ–≥–æ
function updateMostPopular() {
    const mostPopular = articles.reduce((max, article) => 
        article.views > max.views ? article : max
    , articles[0]);

    mostPopularContainer.innerHTML = `
        <div class="card">
            <div class="card-body">
                <h6 class="card-title">${mostPopular.title}</h6>
                <p class="card-text small text-muted mb-2">${mostPopular.content.substring(0, 100)}...</p>
                <div class="d-flex justify-content-between align-items-center">
                    <span class="badge bg-primary">${mostPopular.category}</span>
                    <small class="text-muted">${formatDate(mostPopular.date)}</small>
                </div>
                <div class="mt-2">
                    <span class="reading-time">‚è±Ô∏è ${calculateReadingTime(mostPopular.wordCount)}</span>
                    <span class="views-count ms-3">üëÅÔ∏è ${mostPopular.views}</span>
                </div>
            </div>
        </div>
    `;
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
function toggleTheme() {
    currentTheme = currentTheme === 'light' ? 'dark' : 'light';
    localStorage.setItem('theme', currentTheme);
    applyTheme();
}

function applyTheme() {
    document.documentElement.setAttribute('data-theme', currentTheme);
    themeToggle.innerHTML = currentTheme === 'light' 
        ? '<i class="bi bi-moon-fill"></i> –°—Ç–∞—Ç—å –ß–µ—Ä–Ω–æ—Å–Ω–µ–∂–∫–æ–π'
        : '<i class="bi bi-sun-fill"></i> –°—Ç–∞—Ç—å –ë–µ–ª–æ—Å–Ω–µ–∂–∫–æ–π';
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
sortSelect.addEventListener('change', renderArticles);
themeToggle.addEventListener('click', toggleTheme);

// –ü–æ—Ä–æ—Å—è—á–∏–π —Ä–µ–∂–∏–º
pigModeToggle.addEventListener('click', () => {
    // –í—ã–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –¥–µ–º–æ–∫—Ä–∞—Ç–∏–∏ –µ—Å–ª–∏ –æ–Ω –±—ã–ª –≤–∫–ª—é—á–µ–Ω
    if (isDemocracyMode) {
        isDemocracyMode = false;
        document.body.classList.remove('democracy-mode');
    }
    
    isPigMode = !isPigMode;
    document.body.classList.toggle('pig-mode');
    document.body.classList.toggle('pig-cursor');
    pigSound.play();
});

// –†–µ–∂–∏–º –¥–µ–º–æ–∫—Ä–∞—Ç–∏–∏
democracyModeToggle.addEventListener('click', () => {
    // –í—ã–∫–ª—é—á–∞–µ–º –ø–æ—Ä–æ—Å—è—á–∏–π —Ä–µ–∂–∏–º –µ—Å–ª–∏ –æ–Ω –±—ã–ª –≤–∫–ª—é—á–µ–Ω
    if (isPigMode) {
        isPigMode = false;
        document.body.classList.remove('pig-mode');
        document.body.classList.remove('pig-cursor');
    }
    
    isDemocracyMode = !isDemocracyMode;
    document.body.classList.toggle('democracy-mode');
    democracyVolumeControl.style.display = isDemocracyMode ? 'flex' : 'none';
    
    if (isDemocracyMode) {
        eagleSound.play();
    } else {
        eagleSound.pause();
        eagleSound.currentTime = 0;
        anthemSound.pause();
        anthemSound.currentTime = 0;
        gunSound.pause();
        gunSound.currentTime = 0;
    }
});

// –î–æ–±–∞–≤–ª—è–µ–º –∑–≤—É–∫ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤ —Ä–µ–∂–∏–º–µ –¥–µ–º–æ–∫—Ä–∞—Ç–∏–∏
document.addEventListener('click', (e) => {
    if (isDemocracyMode && (e.target.tagName === 'BUTTON' || e.target.closest('button'))) {
        if (e.target.id === 'democracyModeToggle' || e.target.closest('#democracyModeToggle')) {
            anthemSound.currentTime = 0;
            anthemSound.play();
        } else {
            gunSound.currentTime = 0;
            gunSound.play();
        }
    }
});

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π –≥—Ä–æ–º–∫–æ—Å—Ç–∏
eagleSound.volume = 1;
anthemSound.volume = 1;
gunSound.volume = 1;

// –§—É–Ω–∫—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
function setRandomVolume() {
    const volume = Math.random(); // —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 1
    eagleSound.volume = volume;
    anthemSound.volume = volume;
    gunSound.volume = volume;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–∑—É–Ω–∫–∞
    democracyVolume.value = volume * 100;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∫–Ω–æ–ø–∫–∏
    democracyVolumeBtn.classList.add('volume-changed');
    setTimeout(() => {
        democracyVolumeBtn.classList.remove('volume-changed');
    }, 500);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –≥—Ä–æ–º–∫–æ—Å—Ç–∏
democracyVolumeBtn.addEventListener('click', setRandomVolume);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
democracyVolumeBtn.addEventListener('input', (e) => {
    const volume = e.target.value / 100;
    eagleSound.volume = volume;
    anthemSound.volume = volume;
    gunSound.volume = volume;
}); 